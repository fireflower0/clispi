#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#

(defpackage #:clispi/roswell/clispi.ros
  (:use #:cl))
(in-package #:clispi/roswell/clispi.ros)

(ql:quickload '(:clispi) :silent t)

(defconstant +print-version+ "clispi version 0.0.1")
(defconstant +print-usage+
"~A
A framework that makes it easy to perform electronic work using Common Lisp on Raspberry Pi.

 +--------------------------------------------------+
 | + + + + + + + + + + + + + + + + + + + +    +-------+
 | + + + + + + + + + + + + + + + + + + + +    |       |
 |                                        + + |       |
 | +-+      +--------+ +------+    +---+  + + |       |
 | | |      |+------+| |      |    |   |      +-------+
 | | |      ||      || |      |    |   |            |
 | | |      ||      || |      |    +---+            |
 | | |      |+------+| |      |                +------+
 | | |      +--------+ +------+      +---+     |      |
 | | |                        +-+    |   |     |      |
 | | |                        | |    +---+     +----+-+
 | | |                        | |                   |
 | +-+                        | |              +----+-+
 |                            | |              |      |
 |                            | | +--+         |      |
 |    +----+     +--+    +--+ +-+ |  |         +------+
 +----|    |-----|  |----|  |-----+  +--------------+
      +----+     +--+    +--+     +--+

Usage: clispi new [project name]

Command:
  new <project name> : Generate a project

Options:
  -v, --version   print clispi version
")

(defun command-new (path &rest options)
  (declare (ignore options))
  (let ((args nil)
        (path (uiop:ensure-directory-pathname path)))
    (apply #'clispi:make-project path args)
    (ql:register-local-projects)))

(defun main (&optional command &rest argv)
  (cond
    ((equal command "new")
     (unless (first argv)
       (uiop:quit -1))
     (apply #'command-new argv))
    ((or (equal command "--version")
         (equal command "-v"))
     (format *error-output* +print-version+))
    (t (format *error-output* +print-usage+ +print-version+))))
